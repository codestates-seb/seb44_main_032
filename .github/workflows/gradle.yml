# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
    
env:
  S3_BUCKET_NAME: code-assembly
  
permissions:
  contents: read

jobs:
  server_build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      working-directory: ./server
      run: chmod +x ./gradlew

    - name: Build Server with Gradle
      working-directory: ./server
      run: ./gradlew build -x test
      
    - name: Make zip file
      run: zip -r ./code-assembly-deploy.zip .
      shell: bash
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./code-assembly-deploy.zip s3://$S3_BUCKET_NAME/code-assembly-deploy.zip

    - name: Create CodeDeploy Deployment Group
      run: |
        DEPLOYMENT_DIR=$(ls -td /opt/codedeploy-agent/deployment-root/*/*/deployment-archive | head -n 1)
        APPSPEC_PATH="$DEPLOYMENT_DIR/server/appspec.yml"
        aws deploy create-deployment-group --application-name code-assembly
        --deployment-group-name code-assembly-group
        --service-role-arn arn:aws:iam::081505691947:role/code-assembly-deploy-group-role
        --deployment-style deploymentType=IN_PLACE
        --blue-green-deployment-configuration terminateBlueInstancesOnDeploymentSuccess={action=TERMINATE,terminationWaitTimeInMinutes=5}
        --appspec-content file://$APPSPEC_PATH

  client_build:
    needs: server_build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.14.2'

    - name: Install dependencies
      working-directory: ./client
      run: npm ci

    - name: Build Client with npm
      working-directory: ./client
      run: npm run build
